package com.one.day1;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class DuplicateUsingStreams {
	public static void main(String [] args) {
//		int[]a= {3,6,78,9,73,1,4,7};
//		Arrays.sort(a);
//		for(int i=0;i<a.length;i++) {
//		System.out.println(a[i]);
//	}
//		List<Integer>aa=Arrays.asList(12,34,67,89,65,12,34,67);
//		List<Integer>aaa=aa.stream().distinct().collect(Collectors.toList());
//		System.out.println(aaa);
		
		String a="onesofttechnologies";
		String b="";
		char []c=a.toCharArray();
		
//		HashMap<Character, Integer>maps=new HashMap<>();
//		for(Character f:c) {
//			if(maps.containsKey(f)) {
//				maps.put(f, maps.get(f)+1);
//			}
//			else {
//				maps.put(f,1);
//			}
//		}
//		
//		for(Character h:maps.keySet()) {
//			int count=maps.get(h);
//			if(count>1) {
//				System.out.println(h+"---"+count);
//			}
//		}
		
		
		Map<Character, Long> countByCharacter = a.chars()
	            .mapToObj(cc -> (char) cc)
	            .collect(Collectors.groupingBy(cc -> cc, Collectors.counting()));
		Map<Character, Long> countt= 	countByCharacter.entrySet().stream().filter(t-> t.getValue()>1).collect(Collectors.toMap(y->y.getKey(), y->y.getValue()));
//		System.out.println(countByCharacter);
//		System.out.println(countt);
		countt.forEach((y,h)-> System.out.println(y+h));
	}
}
